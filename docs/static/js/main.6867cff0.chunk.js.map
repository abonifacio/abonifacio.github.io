{"version":3,"sources":["hook/useObservable.ts","service/tags.ts","service/experience.ts","service/period.ts","service/stats.ts","service/resume.ts","hook/useResume.ts","hook/useFilters.ts","hook/usePrintMode.ts","hook/useInputData.ts","component/Profile.tsx","service/social.ts","service/badge.ts","component/Milestone.tsx","component/MacroExperience.tsx","component/Section.tsx","service/certificate.ts","component/Certificate.tsx","component/Education.tsx","hook/useToggleOptions.ts","component/Stats.tsx","component/Filter.tsx","component/Resume.tsx","component/InputMissingData.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useObservable","factory","deps","useState","loading","data","undefined","error","state","setState","useEffect","subscription","subscribe","next","unsubscribe","getTags","exp","collectedTags","tags","collectTags","exp$","pipe","map","concatAll","distinct","getFacets","collectedFacets","facets","collectFacets","experienceFilter","experience$","filter","length","some","l","includes","tagFilter","facetFilter","Precision","DATE_REGEX","getDateParts","date","matches","exec","Error","slice","it","getPrecision","toLowerCase","DATE","parseDate","Date","dateParts","parseInt","dateArgs","year","month","day","parsePeriod","period","split","d","computeDurationInDays","string","parentUntil","fromDate","fromPrecision","toDate","Math","round","getTime","YEAR","computeMilestoneDuration","milestone$","milestone","durationInDays","computeLanguageStats","reducer","reduce","languageMap","subLanguageMap","tag","sumTagMaps","obs$","tagMap","subTagMap","Object","entries","acc","duration","computeMacroExperienceDuration","mergeMap","milestones","obsFrom","max","enhanceResume","resume","sideProjects$","from","sideProjects","jobs$","jobs","education$","education","enhanceExperiences","experiences$","milestones$","tags$","toArray","facets$","forkJoin","concat","enhancedJobs$","enhancedEducation$","stats$","projects$","projectsExp$","a","b","jobsExp$","educationExp$","experience","computeResumeStats","stats","getResume","fetch","then","res","json","useResume","filterOptions","inputData","filteredResume","of","EMPTY","resume$","me","rest","fillResume","opts","filterExperiences","FilterContext","createContext","filters","dispatch","_","PrintContext","usePrintMode","screen","print","useContext","usePrintModeAs","breakpoint","printCtx","InputDataModal","show","hide","showing","onChange","SocialComponent","name","social","defaultProps","color","label","icon","FaGithub","link","FaLinkedinIn","FaTwitter","socialDefaultProps","as","mt","mx","base","md","rightIcon","src","colorScheme","href","target","ProfileComponent","email","phone","coverLetter","location","picture","socials","darkModeToggle","printFix","showInputModal","templateColumns","columnGap","alignItems","w","justifySelf","sm","borderRadius","onDoubleClick","alt","px","maxWidth","align","textAlign","isTruncated","fontSize","fontWeight","fontFamily","className","wrap","direction","justifyContent","socialName","detail","COLOR_SCHEMES","getColorScheme","text","hash","i","charCodeAt","hashCode","abs","MilestoneComponent","title","description","selectedTags","mb","verticalAlign","VscMilestone","t","size","mr","pl","h","alignSelf","orientation","pt","MacroExperienceComponent","organization","children","selectedFacets","spacing","whiteSpace","m","Section","experiences","experienceComponent","Component","p","j","Fragment","fetchCourseraImage","id","elements","url","CourseraCertificate","fallback","useAsync","image","result","actualWidth","setActualWidth","marginLeft","setMarginLeft","ref","useRef","updateObjectPosition","useCallback","current","onload","width","offsetWidth","margin","setTimeout","useCourseraImageMarginFix","overflow","ml","maxHeight","DigitalCertificateComponent","certificate","courseraId","resolveCertificateIdAndIssuer","issuer","props","height","EducationComponent","useToggleOptions","options","selectedSet","useMemo","Set","option","has","str","array","addOption","daysToString","days","years","integer","floor","decimals","StatsComponent","isPrintMode","toggleOption","isOptionChecked","sort","flexGrow","onClick","value","style","cursor","in","unmountOnExit","TagOptions","selected","availableOptions","justify","opt","Filter","availableFacets","display","rowGap","justifyItems","ResumeComponent","toggles","sideProjectTags","IoMdBriefcase","VscBook","BiGlassesAlt","InputMissingData","onClose","setEmail","setPhone","initialRef","React","initialFocusRef","isOpen","onSubmit","e","preventDefault","pb","type","placeholder","App","useColorMode","colorMode","toggleColorMode","useReducer","mode","document","body","classList","remove","add","printMode","togglePrintMode","window","usePrint","patch","modalContext","setShowInputModal","action","useInputData","Provider","aria-label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","shadows","outline","fonts","heading","components","Text","variants","styles","global","bg","lineHeight","section","boxShadow","ReactApp","StrictMode","resetCSS","rootElement","getElementById","hasChildNodes","ReactDOM","hydrate","render","console","log"],"mappings":"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","file":"static/js/main.6867cff0.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Observable, Subject } from \"rxjs\";\nimport { Dispatch, useEffect, useState } from \"react\";\n\ntype Return<T> = {\n  loading: boolean;\n  data: T | undefined;\n  error: Error | undefined;\n};\n\nexport default function useObservable<T>(\n  factory: (...args: any[]) => Observable<T>,\n  deps: any[] = []\n): Return<T> {\n  const [state, setState] = useState<Return<T>>({\n    loading: false,\n    data: undefined,\n    error: undefined,\n  });\n  useEffect(() => {\n    const observable$ = factory(...deps);\n    const subscription = observable$.subscribe({\n      next: (data) => setState({ data, loading: false, error: undefined }),\n      error: (error) => setState({ data: undefined, loading: false, error }),\n    });\n    return () => subscription.unsubscribe();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [...deps]);\n  return state;\n}\n\nexport function useSubject<T>(): [Observable<T>, Dispatch<T>] {\n  const subject = new Subject<T>();\n  return [subject, subject.next];\n}\n","import { Observable } from \"rxjs\";\nimport { concatAll, distinct, map } from \"rxjs/operators\";\nimport Experience from \"../model/experience\";\n\ntype WithTags = { tags?: string[] } | { collectedTags: string[] };\n\nexport function getTags(exp: WithTags): string[] {\n  if (\"collectedTags\" in exp) {\n    return exp.collectedTags;\n  }\n  return exp.tags || [];\n}\n\nexport function collectTags<T extends WithTags>(\n  exp$: Observable<T>\n): Observable<string> {\n  return exp$.pipe(map(getTags), concatAll(), distinct());\n}\n\nexport function tagFilter<T extends WithTags>(\n  tags?: string[]\n): (exp: T) => boolean {\n  return (exp) => !tags?.length || getTags(exp).some((l) => tags.includes(l));\n}\n\ntype WithFacets = { facets?: string[] } | { collectedFacets: string[] };\n\nexport function getFacets(exp: WithFacets): string[] {\n  if (\"collectedFacets\" in exp) {\n    return exp.collectedFacets;\n  }\n  return exp.facets || [];\n}\n\nexport function collectFacets<T extends { facets?: string[] }>(\n  exp$: Observable<T>\n): Observable<string> {\n  return exp$.pipe(map(getFacets), concatAll(), distinct());\n}\n\nexport function facetFilter<T extends Experience>(\n  facets?: string[]\n): (exp: T) => boolean {\n  return (exp) =>\n    !facets?.length || getFacets(exp).some((l) => facets.includes(l));\n}\n","import { forkJoin, from, Observable } from \"rxjs\";\nimport { filter, map, mergeMap, toArray } from \"rxjs/operators\";\nimport MacroExperience from \"../model/macroExperience\";\nimport RealMilestone from \"../model/milestone\";\nimport Experience from \"../model/experience\";\nimport { collectFacets, collectTags, facetFilter, tagFilter } from \"./tags\";\n\nexport type Milestone = Omit<RealMilestone, \"title\">;\n\nexport type EnhancedExperience = {\n  collectedTags: string[];\n  collectedFacets?: string[];\n};\n\nexport function experienceEnhancer<\n  T extends Pick<\n    MacroExperience,\n    \"milestones\" | \"tags\" | \"period\" | \"organization\"\n  >\n>(): (experiences$: Observable<T>) => Observable<T & EnhancedExperience> {\n  return (experiences$: Observable<T>) =>\n    experiences$.pipe(\n      mergeMap((exp) => {\n        const milestones$ = from(exp.milestones || []);\n        const tags$ = milestones$.pipe(collectTags, toArray());\n        const facets$ = milestones$.pipe(collectFacets, toArray());\n        return forkJoin([tags$, facets$]).pipe(\n          map(([collectedTags, collectedFacets]) => ({\n            ...exp,\n            collectedTags: (exp.tags || []).concat(collectedTags),\n            collectedFacets,\n          }))\n        );\n      })\n    );\n}\n\nexport interface ExperienceFilter {\n  tags: string[];\n  facets: string[];\n}\n\nexport function experienceFilter<T extends Experience>({\n  tags,\n  facets,\n}: ExperienceFilter): (experience$: Observable<T>) => Observable<T> {\n  return (experience$) => {\n    return experience$.pipe(\n      filter(tagFilter(tags)),\n      filter(facetFilter(facets))\n    );\n  };\n}\n","export enum Precision {\n  YEAR = 1,\n  MONTH = 2,\n  DATE = 3,\n}\n\nconst DATE_REGEX = /^(\\d{4})(?:-(\\d{1,2}))?(?:-(\\d{1,2}))?$/;\n\nfunction getDateParts(date: string): string[] {\n  const matches = DATE_REGEX.exec(date);\n  if (!matches || matches.length < 2) {\n    throw new Error(`Cannot parse date: ${date}`);\n  }\n  return matches.slice(1).filter((it) => it !== undefined);\n}\n\nfunction dateArgs(date: string): [number, number, number] {\n  const dateParts = getDateParts(date);\n  return [\n    parseInt(dateParts[0], 10),\n    dateParts[1] ? parseInt(dateParts[1], 10) - 1 : 0,\n    dateParts[2] ? parseInt(dateParts[2], 10) : 1,\n  ];\n}\n\nexport function getPrecision(date: string): Precision {\n  if (date.toLowerCase() === \"present\") {\n    return Precision.DATE;\n  }\n  const dateParts = getDateParts(date);\n  return dateParts.length;\n}\n\nexport function parseDate(date: string): Date {\n  if (date.toLowerCase() === \"present\") {\n    return new Date();\n  }\n  const [year, month, day] = dateArgs(date);\n  return new Date(year, month, day);\n}\n\nfunction parseDateWithPrecision(date: string): [Date, Precision] {\n  return [parseDate(date), getPrecision(date)];\n}\n\nexport function parsePeriod(period: string): [Date, Precision][] {\n  return period.split(\" - \").map((d) => parseDateWithPrecision(d));\n}\n\nexport function periodIncludes(period: string, date: string): boolean {\n  const [[from], [to]] = parsePeriod(period);\n  const realDate = parseDate(date);\n  return (\n    realDate.getTime() >= from.getTime() && realDate.getTime() <= to.getTime()\n  );\n}\n","import { concat, from as obsFrom, Observable, OperatorFunction } from \"rxjs\";\nimport { map, mergeMap, reduce } from \"rxjs/operators\";\nimport { parsePeriod, Precision } from \"./period\";\nimport { Milestone } from \"./experience\";\nimport Job from \"../model/job\";\nimport Education from \"../model/education\";\n\nconst MILLIS_TO_DAYS_DIVIDER = 1000 * 60 * 60 * 24;\n\nfunction computeDurationInDays(\n  string: string,\n  parentUntil?: [Date, Precision]\n) {\n  const [[fromDate, fromPrecision], to] = parsePeriod(string);\n  const [toDate] = to || parentUntil || [];\n  if (!toDate) {\n    if (fromPrecision === Precision.YEAR) {\n      return 365;\n    }\n    return 30;\n  }\n  return Math.round(\n    (toDate.getTime() - fromDate.getTime()) / MILLIS_TO_DAYS_DIVIDER\n  );\n}\n\ntype WithDuration = {\n  durationInDays: number;\n};\n\nexport function computeMilestoneDuration<T extends { date: string }>(\n  parentUntil?: [Date, Precision]\n): OperatorFunction<T, T & WithDuration> {\n  return (milestone$: Observable<T>) => {\n    return milestone$.pipe(\n      map((milestone) => ({\n        ...milestone,\n        durationInDays: computeDurationInDays(milestone.date, parentUntil),\n      }))\n    );\n  };\n}\n\nexport function computeLanguageStats<\n  T extends Pick<Milestone, \"tags\"> & WithDuration\n>(\n  reducer: (a: number, b: number) => number\n): OperatorFunction<T, Record<string, number>> {\n  return (experience$: Observable<T>) =>\n    experience$.pipe(\n      reduce(\n        (languageMap, { tags, durationInDays }) =>\n          (tags || []).reduce(\n            (subLanguageMap, tag) => ({\n              ...subLanguageMap,\n              [tag]: reducer(subLanguageMap[tag] || 0, durationInDays),\n            }),\n            languageMap\n          ),\n        {} as Record<string, number>\n      )\n    );\n}\n\nexport function sumTagMaps(\n  obs$: Observable<Record<string, number>>\n): Observable<Record<string, number>> {\n  return obs$.pipe(\n    reduce((tagMap, subTagMap) =>\n      Object.entries(subTagMap).reduce(\n        (acc, [tag, duration]) => ({\n          ...acc,\n          [tag]: (acc[tag] || 0) + duration,\n        }),\n        tagMap\n      )\n    )\n  );\n}\n\nexport function computeMacroExperienceDuration<\n  T extends { period: string; milestones?: Pick<Milestone, \"date\" | \"tags\">[] }\n>(experience$: Observable<T>): Observable<Record<string, number>> {\n  return experience$.pipe(\n    mergeMap(({ milestones, period }) =>\n      obsFrom(milestones || []).pipe(\n        computeMilestoneDuration(parsePeriod(period)[1]),\n        computeLanguageStats(Math.max)\n      )\n    ),\n    sumTagMaps\n  );\n}\n\nexport type Stats = {\n  experience: Record<string, number>;\n};\n\nexport function computeResumeStats(\n  jobs$: Observable<Job>,\n  education$: Observable<Education>,\n  projects$: Observable<Milestone>\n): Observable<Stats> {\n  const projectsExp$ = obsFrom(projects$).pipe(\n    computeMilestoneDuration(),\n    computeLanguageStats((a, b) => a + b)\n  );\n  const jobsExp$ = obsFrom(jobs$).pipe(computeMacroExperienceDuration);\n  const educationExp$ = obsFrom(education$).pipe(\n    computeMacroExperienceDuration\n  );\n  const experienceByTag = concat(projectsExp$, jobsExp$, educationExp$).pipe(\n    sumTagMaps\n  );\n  return experienceByTag.pipe(\n    map((experience) => ({\n      experience,\n    }))\n  );\n}\n","import { forkJoin, from, Observable, OperatorFunction } from \"rxjs\";\nimport { map, mergeMap, toArray } from \"rxjs/operators\";\nimport { Resume } from \"../model/resume\";\nimport MacroExperience from \"../model/macroExperience\";\nimport {\n  EnhancedExperience,\n  experienceEnhancer,\n  ExperienceFilter,\n  experienceFilter,\n} from \"./experience\";\nimport Job from \"../model/job\";\nimport Profile from \"../model/profile\";\nimport { computeResumeStats, Stats } from \"./stats\";\n\nfunction fetchResume(): Promise<Resume> {\n  return fetch(\"/resume.json\").then((res) => res.json());\n}\n\nexport function enhanceResume(resume: Resume): Observable<EnhancedResume> {\n  const sideProjects$ = from(resume.sideProjects);\n  const jobs$ = from(resume.jobs);\n  const education$ = from(resume.education);\n\n  const enhanceExperiences = experienceEnhancer<MacroExperience>();\n\n  const enhancedJobs$ = jobs$.pipe(enhanceExperiences);\n  const enhancedEducation$ = education$.pipe(enhanceExperiences);\n  const stats$ = computeResumeStats(jobs$, education$, sideProjects$);\n\n  return forkJoin([\n    enhancedJobs$.pipe(toArray()),\n    enhancedEducation$.pipe(toArray()),\n    stats$,\n  ]).pipe(\n    map(([jobs, education, stats]) => ({\n      ...resume,\n      jobs,\n      education,\n      stats,\n    }))\n  );\n}\n\nexport type ResumeFilter = ExperienceFilter;\n\nexport function filterResume<T extends Resume>(\n  opts: ResumeFilter\n): (resume$: Observable<T>) => Observable<T> {\n  return (resume$: Observable<T>) => {\n    const filterExperiences = experienceFilter(opts);\n    return resume$.pipe(\n      mergeMap((resume) => {\n        const jobs$ = from(resume.jobs).pipe(filterExperiences, toArray());\n        const education$ = from(resume.education).pipe(\n          filterExperiences,\n          toArray()\n        );\n        const sideProjects$ = from(resume.sideProjects).pipe(\n          filterExperiences,\n          toArray()\n        );\n        return forkJoin([jobs$, education$, sideProjects$]).pipe(\n          map(([jobs, education, sideProjects]) => ({\n            ...resume,\n            jobs,\n            education,\n            sideProjects,\n          }))\n        );\n      })\n    );\n  };\n}\n\nexport type EnhancedResume = Resume & {\n  jobs: (Job & EnhancedExperience)[];\n  education: (Job & EnhancedExperience)[];\n  stats: Stats;\n};\n\nexport default function getResume(): Observable<EnhancedResume> {\n  return from(fetchResume()).pipe(mergeMap(enhanceResume));\n}\n\nexport function fillResume<T extends Resume>(\n  inputData: Pick<Profile, \"email\" | \"phone\">\n): OperatorFunction<T, T> {\n  return (resume$: Observable<T>) =>\n    resume$.pipe(\n      map((resume) => {\n        const { me, ...rest } = resume;\n        return {\n          ...rest,\n          me: {\n            ...me,\n            ...inputData,\n          },\n        } as T;\n      })\n    );\n}\n","import { EMPTY, of } from \"rxjs\";\nimport useObservable from \"./useObservable\";\nimport getResume, {\n  EnhancedResume,\n  fillResume,\n  filterResume,\n  ResumeFilter,\n} from \"../service/resume\";\nimport Profile from \"../model/profile\";\n\nexport default function useResume(\n  filterOptions: ResumeFilter,\n  inputData: Pick<Profile, \"email\" | \"phone\">\n): {\n  loading: boolean;\n  resume: EnhancedResume | undefined;\n  error: Error | undefined;\n} {\n  const resume = useObservable(getResume);\n  const filteredResume = useObservable(\n    () =>\n      (resume.data ? of(resume.data) : EMPTY).pipe(\n        fillResume(inputData),\n        filterResume(filterOptions)\n      ),\n    [resume.data, filterOptions, inputData]\n  );\n  return {\n    loading: true,\n    resume: filteredResume.data,\n    error: resume.error || filteredResume.error,\n  };\n}\n","import { createContext, Dispatch, useReducer } from \"react\";\nimport { ResumeFilter } from \"../service/resume\";\nimport { ExperienceFilter } from \"../service/experience\";\n\nconst filtersDefault: ExperienceFilter = {\n  tags: [],\n  facets: [],\n};\n\nexport const FilterContext = createContext({\n  filters: filtersDefault,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  dispatch: (_: Partial<ResumeFilter>) => {},\n});\n\nexport default function useFilters(): [\n  ResumeFilter,\n  Dispatch<Partial<ResumeFilter>>\n] {\n  return useReducer(\n    (state: ResumeFilter, patch: Partial<ResumeFilter>) => ({\n      ...state,\n      ...patch,\n    }),\n    {\n      tags: [],\n      facets: [],\n    }\n  );\n}\n","import {\n  createContext,\n  DispatchWithoutAction,\n  useContext,\n  useEffect,\n  useReducer,\n} from \"react\";\n\nexport const PrintContext = createContext(false);\n\nexport function usePrint(\n  printMode: boolean,\n  togglePrintMode: () => void\n): void {\n  useEffect(() => {\n    if (printMode) {\n      window.print();\n      togglePrintMode();\n    }\n  }, [printMode, togglePrintMode]);\n}\n\nexport function usePrintModeReducer(): [boolean, DispatchWithoutAction] {\n  return useReducer((mode) => {\n    if (mode) {\n      document.body.classList.remove(\"print-mode\");\n    } else {\n      document.body.classList.add(\"print-mode\");\n    }\n    return !mode;\n  }, false);\n}\n\nexport function usePrintMode<T>(\n  screen: T | T[] | Record<string, T>,\n  print: T\n): T | T[] | Record<string, T> {\n  const printCtx = useContext(PrintContext);\n  return printCtx ? print : screen;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function usePrintModeAs(breakpoint: string): (fix: any) => any {\n  const printCtx = useContext(PrintContext);\n  return <T = string | number>(screen: Record<string, T>) =>\n    printCtx ? screen[breakpoint] : screen;\n}\n","import {\n  createContext,\n  Dispatch,\n  DispatchWithoutAction,\n  useReducer,\n  useState,\n} from \"react\";\nimport Profile from \"../model/profile\";\n\ntype InputData = Pick<Profile, \"email\" | \"phone\">;\n\ntype InputDataModalCtx = {\n  hide: DispatchWithoutAction;\n  show: DispatchWithoutAction;\n  onChange: Dispatch<Partial<InputData>>;\n  showing: boolean;\n  data: InputData;\n};\n\nexport const InputDataModal = createContext<InputDataModalCtx>({\n  show: () => {},\n  hide: () => {},\n  data: {},\n  showing: false,\n  onChange: () => {},\n});\n\nexport default function useInputData(): InputDataModalCtx {\n  const [showing, setShowInputModal] = useState(false);\n  const [data, onChange] = useReducer(\n    (state: InputData, action: Partial<InputData>) => ({\n      ...state,\n      ...action,\n    }),\n    {}\n  );\n  return {\n    hide: () => setShowInputModal(false),\n    show: () => setShowInputModal(true),\n    data,\n    onChange,\n    showing,\n  };\n}\n","import {\n  Button,\n  Flex,\n  Grid,\n  Heading,\n  Icon,\n  Image,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { useContext } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Profile, { Social } from \"../model/profile\";\nimport socialDefaultProps from \"../service/social\";\nimport { usePrintModeAs } from \"../hook/usePrintMode\";\nimport { InputDataModal } from \"../hook/useInputData\";\n\nfunction SocialComponent({\n  name,\n  social,\n}: {\n  name: string;\n  social: string | Social | undefined;\n}): JSX.Element {\n  if (!social) {\n    return <></>;\n  }\n  const defaultProps = socialDefaultProps(name, social);\n  if (!defaultProps) {\n    return <></>;\n  }\n  const { link, label, color } =\n    typeof social === \"string\"\n      ? defaultProps\n      : {\n          ...defaultProps,\n          ...social,\n        };\n  return (\n    <Button\n      as=\"a\"\n      mt={2}\n      mx={{ base: 2, md: 0 }}\n      rightIcon={\n        typeof defaultProps.icon === \"string\" ? (\n          <Image src={defaultProps.icon} />\n        ) : (\n          <Icon as={defaultProps.icon} />\n        )\n      }\n      colorScheme={color}\n      href={link}\n      target=\"_blank\"\n    >\n      {label}\n    </Button>\n  );\n}\n\nexport default function ProfileComponent({\n  email,\n  phone,\n  coverLetter,\n  location,\n  name,\n  picture,\n  socials,\n  darkModeToggle,\n}: Profile & { darkModeToggle: React.ReactElement }): JSX.Element {\n  const printFix = usePrintModeAs(\"md\");\n  const { show: showInputModal } = useContext(InputDataModal);\n  return (\n    <Grid\n      templateColumns={printFix({\n        base: \"1fr\",\n        md: \"max-content auto max-content\",\n      })}\n      columnGap={8}\n      alignItems=\"center\"\n      w=\"100%\"\n    >\n      <Image\n        justifySelf=\"center\"\n        w={printFix({ base: 100, sm: 150, md: 200 })}\n        src={picture}\n        borderRadius=\"full\"\n        onDoubleClick={showInputModal}\n        alt={`${name}'s profile picture`}\n      />\n      <VStack px={2} maxWidth=\"100vw\" align=\"left\">\n        <Heading\n          as=\"h1\"\n          colorScheme=\"gray\"\n          textAlign={printFix({ base: \"center\", md: \"left\" })}\n          isTruncated\n        >\n          {name} {darkModeToggle}\n        </Heading>\n        {location && (\n          <Heading\n            as=\"h4\"\n            fontSize=\"lg\"\n            fontWeight=\"regular\"\n            colorScheme=\"gray\"\n            textAlign={printFix({ base: \"center\", md: \"left\" })}\n            isTruncated\n          >\n            {location}\n          </Heading>\n        )}\n        {email && (\n          <Heading\n            textAlign={printFix({ base: \"center\", md: \"left\" })}\n            as=\"h5\"\n            fontFamily=\"monospace\"\n            fontSize=\"sm\"\n            fontWeight=\"light\"\n            colorScheme=\"black\"\n            isTruncated\n          >\n            {email}\n          </Heading>\n        )}\n        {phone && (\n          <Heading\n            textAlign={printFix({ base: \"center\", md: \"left\" })}\n            as=\"h5\"\n            fontFamily=\"monospace\"\n            fontSize=\"sm\"\n            fontWeight=\"light\"\n            colorScheme=\"black\"\n            isTruncated\n          >\n            {phone}\n          </Heading>\n        )}\n        <Text\n          textAlign={printFix({ base: \"center\", md: \"left\" })}\n          as=\"h6\"\n          isTruncated\n        >\n          <ReactMarkdown className=\"markdown\">{coverLetter}</ReactMarkdown>\n        </Text>\n      </VStack>\n      <Flex\n        wrap=\"wrap\"\n        direction={printFix({ base: \"row\", md: \"column\" })}\n        mt={6}\n        justifyContent={printFix({\n          base: \"space-between\",\n          sm: \"center\",\n          md: \"flex-end\",\n        })}\n      >\n        {Object.entries(socials).map(([socialName, detail]) => (\n          <SocialComponent key={socialName} name={socialName} social={detail} />\n        ))}\n      </Flex>\n    </Grid>\n  );\n}\n","import { IconType } from \"react-icons\";\nimport { FaGithub, FaLinkedinIn, FaTwitter } from \"react-icons/all\";\nimport { Social } from \"../model/profile\";\n\nexport default function socialDefaultProps(\n  name: string,\n  social: Social | string\n): (Omit<Social, \"icon\"> & { icon: string | IconType }) | null {\n  if (typeof social !== \"string\") {\n    return {\n      color: \"gray\",\n      ...social,\n    };\n  }\n  switch (name) {\n    case \"github\":\n      return {\n        color: \"gray\",\n        label: social,\n        icon: FaGithub,\n        link: `https://github.com/${social}`,\n      };\n    case \"linkedin\":\n      return {\n        color: \"linkedin\",\n        label: social,\n        icon: FaLinkedinIn,\n        link: `https://linkedin.com/in/${social}`,\n      };\n    case \"twitter\":\n      return {\n        color: \"twitter\",\n        label: social,\n        icon: FaTwitter,\n        link: `https://twitter.com/${social}`,\n      };\n    default:\n      return null;\n  }\n}\n","const COLOR_SCHEMES = [\"green\", \"purple\", \"yellow\", \"pink\", \"blue\", \"orange\"];\n\nfunction hashCode(text: string) {\n  let hash = 0;\n  let i;\n  let chr;\n  for (i = 0; i < text.length; i += 1) {\n    chr = text.charCodeAt(i);\n    // eslint-disable-next-line no-bitwise\n    hash = (hash << 5) - hash + chr;\n    // eslint-disable-next-line no-bitwise\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n}\n\nexport default function getColorScheme(text: string): string {\n  const hash = hashCode(text);\n  return COLOR_SCHEMES[Math.abs(hash) % COLOR_SCHEMES.length];\n}\n","import React, { useContext } from \"react\";\nimport { VscMilestone } from \"react-icons/all\";\nimport { Box, Divider, HStack, ListIcon, Tag, Text } from \"@chakra-ui/react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Milestone from \"../model/milestone\";\nimport { FilterContext } from \"../hook/useFilters\";\nimport getColorScheme from \"../service/badge\";\n\nexport default function MilestoneComponent({\n  title,\n  description,\n  tags,\n}: Milestone): JSX.Element {\n  const { tags: selectedTags } = useContext(FilterContext).filters;\n  return (\n    <Box mb={2}>\n      <HStack>\n        <Text>\n          <ListIcon\n            verticalAlign=\"text-top\"\n            as={VscMilestone}\n            color=\"green.500\"\n          />\n          {title}\n        </Text>\n        {tags?.length ? (\n          <Box>\n            {tags?.map((t) => (\n              <Tag\n                colorScheme={\n                  selectedTags.includes(t) ? getColorScheme(t) : undefined\n                }\n                size=\"sm\"\n                textAlign=\"right\"\n                mr={2}\n                key={t}\n              >\n                {t}\n              </Tag>\n            ))}\n          </Box>\n        ) : undefined}\n      </HStack>\n      {description && (\n        <HStack pl={6}>\n          <Divider h=\"auto\" alignSelf=\"stretch\" orientation=\"vertical\" />\n          <Box pt={2}>\n            <ReactMarkdown className=\"markdown\">{description}</ReactMarkdown>\n          </Box>\n        </HStack>\n      )}\n    </Box>\n  );\n}\n","import {\n  Flex,\n  Heading,\n  HStack,\n  List,\n  ListItem,\n  Tag,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { useContext } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport MacroExperience from \"../model/macroExperience\";\nimport MilestoneComponent from \"./Milestone\";\nimport { EnhancedExperience } from \"../service/experience\";\nimport { FilterContext } from \"../hook/useFilters\";\n\nexport default function MacroExperienceComponent({\n  title,\n  period,\n  collectedFacets,\n  description,\n  organization,\n  children,\n  milestones,\n}: MacroExperience &\n  EnhancedExperience & {\n    children?: React.ReactFragment | null;\n  }): JSX.Element {\n  const { facets: selectedFacets } = useContext(FilterContext).filters;\n  return (\n    <VStack align=\"flex-start\" spacing={1}>\n      <Heading size=\"sm\">{title}</Heading>\n      <HStack spacing={2} align=\"baseline\">\n        <Heading as=\"h6\" size=\"xs\" whiteSpace=\"nowrap\" fontWeight=\"light\">\n          {period}\n        </Heading>\n        <Text fontSize=\"md\" fontWeight=\"light\">\n          {organization}\n        </Text>\n      </HStack>\n      {description ? (\n        <ReactMarkdown className=\"markdown\">{description}</ReactMarkdown>\n      ) : null}\n      {collectedFacets?.length ? (\n        <Flex mb={6} wrap=\"wrap\">\n          {collectedFacets?.map((it) => (\n            <Tag\n              colorScheme={\n                !selectedFacets.length || selectedFacets.includes(it)\n                  ? \"purple\"\n                  : \"gray\"\n              }\n              mt={3}\n              mr={4}\n              key={it}\n            >\n              {it}\n            </Tag>\n          ))}\n        </Flex>\n      ) : undefined}\n      {milestones ? (\n        <List spacing={2}>\n          {milestones.map((m) => (\n            <ListItem key={m.title}>\n              <MilestoneComponent {...m} />\n            </ListItem>\n          ))}\n        </List>\n      ) : undefined}\n      {children}\n    </VStack>\n  );\n}\n","import { Divider, Heading, VStack } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport MacroExperience from \"../model/macroExperience\";\nimport MacroExperienceComponent from \"./MacroExperience\";\nimport { EnhancedExperience } from \"../service/experience\";\n\nexport default function Section({\n  title,\n  experiences,\n  experienceComponent: Component = MacroExperienceComponent,\n}: {\n  title: React.ReactElement;\n  experienceComponent?: React.FC<MacroExperience & EnhancedExperience>;\n  experiences: (MacroExperience & EnhancedExperience)[] | undefined;\n}): React.ReactElement | null {\n  return experiences?.length ? (\n    <VStack p={6} as=\"section\" align=\"flex-start\">\n      <Heading size=\"md\" fontWeight=\"normal\">\n        {title}\n      </Heading>\n      <VStack w=\"100%\" spacing={4} align=\"flex-start\">\n        {experiences.map((j) => (\n          <React.Fragment key={`${j.title}-${j.period}-${j.organization}`}>\n            <Divider />\n            <Component {...j} />\n          </React.Fragment>\n        ))}\n      </VStack>\n    </VStack>\n  ) : null;\n}\n","export type DigitalCertificate = {\n  image: string;\n  link: string;\n};\n\nexport function fetchCourseraImage(id: string): Promise<string | undefined> {\n  return fetch(\n    `https://www.coursera.org/api/metaImages.v1/CERTIFICATE_LANDING_PAGE~${id}`\n  )\n    .then((res) => res.json())\n    .then((data) => data?.elements?.[0]?.url as string);\n}\n\nexport type CertificateIssuer = \"coursera\";\n\nexport function resolveCertificateIdAndIssuer(\n  link: string\n): [string, CertificateIssuer] | undefined {\n  const courseraId = (/coursera\\.org.+verify\\/(.+)/.exec(link) || [])[1];\n  if (courseraId) {\n    return [courseraId, \"coursera\"];\n  }\n  return undefined;\n}\n\nexport function fetchDigitalCertificate(\n  certificate: string\n): Promise<DigitalCertificate | undefined> {\n  const courseraId = (/coursera\\.org.+verify\\/(.+)/.exec(certificate) || [])[1];\n  if (courseraId) {\n    return fetchCourseraImage(courseraId).then((image) =>\n      image\n        ? {\n            image,\n            link: certificate,\n          }\n        : undefined\n    );\n  }\n  return Promise.resolve(undefined);\n}\n","import { Box, Image, Link, Skeleton } from \"@chakra-ui/react\";\nimport React, { Ref, useCallback, useEffect, useRef, useState } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport {\n  fetchCourseraImage,\n  resolveCertificateIdAndIssuer,\n} from \"../service/certificate\";\nimport { usePrintModeAs } from \"../hook/usePrintMode\";\n\n// fix for white image margins\nfunction useCourseraImageMarginFix(): [Ref<HTMLImageElement>, string, string] {\n  const [actualWidth, setActualWidth] = useState<string>(\"0px\");\n  const [marginLeft, setMarginLeft] = useState(\"0px\");\n  const ref = useRef<HTMLImageElement>(null);\n  const updateObjectPosition = useCallback(() => {\n    const { current } = ref;\n    if (current && !current.onload) {\n      current.onload = updateObjectPosition;\n    }\n    const width = current?.offsetWidth;\n    if (!width) {\n      setTimeout(updateObjectPosition, 100);\n      return;\n    }\n    const margin = Math.round(width * 0.16);\n    setActualWidth(`${width - margin * 2}px`);\n    setMarginLeft(`-${margin}px`);\n  }, [ref]);\n  useEffect(updateObjectPosition, [updateObjectPosition]);\n  return [ref, actualWidth, marginLeft];\n}\n\nfunction CourseraCertificate({\n  id,\n  fallback,\n}: {\n  id: string;\n  fallback: React.ReactElement;\n}): JSX.Element | null {\n  const { loading, result: image } = useAsync(fetchCourseraImage, [id]);\n  const [ref, actualWidth, marginLeft] = useCourseraImageMarginFix();\n  if (loading) {\n    return fallback;\n  }\n  if (!image) {\n    return null;\n  }\n  return (\n    <Box overflow=\"hidden\" w={actualWidth}>\n      <Image\n        ref={ref}\n        maxWidth=\"400px\"\n        ml={marginLeft}\n        maxHeight=\"200px\"\n        fallback={fallback}\n        src={image}\n        alt={`Certificate image for Coursera:${id}`}\n      />\n    </Box>\n  );\n}\n\nexport default function DigitalCertificateComponent({\n  link,\n}: {\n  link: string;\n}): JSX.Element | null {\n  const printFix = usePrintModeAs(\"md\");\n  const certificate = resolveCertificateIdAndIssuer(link);\n  if (!certificate) {\n    return null;\n  }\n  const [id, issuer] = certificate;\n\n  const props = {\n    id,\n    fallback: <Skeleton height=\"200px\" maxWidth=\"300px\" width=\"100%\" />,\n  };\n\n  return (\n    <Link\n      mt={printFix({ base: 4, md: 0 })}\n      justifySelf={printFix({ base: \"center\", md: \"flex-end\" })}\n      href={link}\n      target=\"_blank\"\n    >\n      {issuer === \"coursera\" ? <CourseraCertificate {...props} /> : undefined}\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@chakra-ui/react\";\nimport Education from \"../model/education\";\nimport MacroExperienceComponent from \"./MacroExperience\";\nimport Certificate from \"./Certificate\";\nimport { EnhancedExperience } from \"../service/experience\";\n\nexport default function EducationComponent(\n  education: Education & EnhancedExperience\n): JSX.Element {\n  const { certificate, ...rest } = education;\n  return (\n    <Grid\n      templateColumns={{ base: \"1fr\", md: \"auto max-content\" }}\n      columnGap={4}\n      w=\"100%\"\n    >\n      <MacroExperienceComponent {...rest} />\n      {certificate && <Certificate link={certificate} />}\n    </Grid>\n  );\n}\n","import { useCallback, useMemo } from \"react\";\n\nconst addOption = (array: string[], str: string) => [...array, str];\nconst removeOption = (array: string[], str: string) =>\n  array.filter((it) => it !== str);\n\nexport default function useToggleOptions(\n  options: string[]\n): [(option: string) => string[], (option: string) => boolean] {\n  const selectedSet = useMemo(() => new Set(options), [options]);\n  const toggle = useCallback(\n    (option) =>\n      selectedSet.has(option)\n        ? removeOption(options, option)\n        : addOption(options, option),\n    [options, selectedSet]\n  );\n  const contains = useCallback((option: string) => selectedSet.has(option), [\n    selectedSet,\n  ]);\n  return [toggle, contains];\n}\n","import {\n  Flex,\n  SlideFade,\n  Stat,\n  StatHelpText,\n  StatNumber,\n  Tag,\n  TagCloseButton,\n  TagLabel,\n} from \"@chakra-ui/react\";\nimport React, { useContext, useMemo } from \"react\";\nimport { Stats } from \"../service/stats\";\nimport useToggleOptions from \"../hook/useToggleOptions\";\nimport { FilterContext } from \"../hook/useFilters\";\nimport { usePrintMode } from \"../hook/usePrintMode\";\n\nfunction daysToString(days: number): string {\n  const years = days / 365;\n  const integer = Math.floor(years);\n  const decimals = years - integer;\n  if (decimals > 0.7) {\n    return `${integer + 1}`;\n  }\n  if (integer === 0) {\n    return `<1`;\n  }\n  if (decimals > 0.2) {\n    return `${integer}+`;\n  }\n  return `${integer}`;\n}\n\nexport default function StatsComponent({\n  experience,\n  tags,\n}: Stats & { tags: string[] }): JSX.Element {\n  const { filters, dispatch } = useContext(FilterContext);\n  const isPrintMode = usePrintMode(false, true) as boolean;\n  const [toggleOption, isOptionChecked] = useToggleOptions(filters.tags);\n  const stats = useMemo(\n    () =>\n      tags\n        .sort()\n        .sort((a, b) => experience[b] - experience[a])\n        .map((tag) => [tag, daysToString(experience[tag])]),\n    [tags, experience]\n  );\n  return (\n    <Flex w=\"100%\" justifyContent=\"space-around\" wrap=\"wrap\">\n      {stats.map(([tag, years]) => (\n        <Stat mt={2} flexGrow={0} textAlign=\"center\" key={tag}>\n          <Tag\n            size=\"lg\"\n            borderRadius=\"full\"\n            onClick={() => dispatch({ tags: toggleOption(tag) })}\n            colorScheme={\n              isOptionChecked(tag) && !isPrintMode ? \"green\" : \"white\"\n            }\n            value={tag}\n          >\n            <TagLabel style={{ cursor: \"pointer\" }}>{tag}</TagLabel>\n            <SlideFade in={isOptionChecked(tag) && !isPrintMode} unmountOnExit>\n              <TagCloseButton />\n            </SlideFade>\n          </Tag>\n          {/* <StatLabel>{tag}</StatLabel> */}\n          <StatNumber>{years}</StatNumber>\n          <StatHelpText mb={0}>Years</StatHelpText>\n        </Stat>\n      ))}\n    </Flex>\n  );\n}\n","import {\n  Grid,\n  Heading,\n  SlideFade,\n  Tag,\n  TagCloseButton,\n  TagLabel,\n  Wrap,\n  WrapItem,\n} from \"@chakra-ui/react\";\nimport React, { Dispatch, useContext } from \"react\";\nimport useToggleOptions from \"../hook/useToggleOptions\";\nimport { usePrintMode } from \"../hook/usePrintMode\";\nimport { FilterContext } from \"../hook/useFilters\";\n\nfunction TagOptions({\n  colorScheme,\n  selected,\n  availableOptions,\n  onChange,\n}: {\n  colorScheme: string;\n  selected: string[];\n  availableOptions: string[];\n  onChange: Dispatch<string[]>;\n}) {\n  const [toggleOption, isOptionChecked] = useToggleOptions(selected);\n  return (\n    <Wrap justify=\"center\" spacing={1}>\n      {availableOptions.map((opt) => (\n        <WrapItem key={opt}>\n          <Tag\n            size=\"lg\"\n            borderRadius=\"full\"\n            onClick={() => onChange(toggleOption(opt))}\n            colorScheme={isOptionChecked(opt) ? colorScheme : \"white\"}\n            value={opt}\n          >\n            <TagLabel style={{ cursor: \"pointer\" }}>{opt}</TagLabel>\n            <SlideFade in={isOptionChecked(opt)} unmountOnExit>\n              <TagCloseButton />\n            </SlideFade>\n          </Tag>\n        </WrapItem>\n      ))}\n    </Wrap>\n  );\n}\n\nexport default function Filter({\n  availableFacets,\n}: {\n  availableFacets: string[];\n}): JSX.Element {\n  const { filters, dispatch } = useContext(FilterContext);\n  const isPrintMode = usePrintMode(\"grid\", \"none\");\n  return (\n    <Grid\n      className=\"no-print\"\n      display={isPrintMode}\n      templateColumns={{\n        base: \"auto\",\n        sm: \"min-content auto\",\n      }}\n      columnGap={2}\n      rowGap={2}\n      justifyItems={{ base: \"center\", sm: \"flex-start\" }}\n      alignItems=\"baseline\"\n      alignSelf=\"center\"\n    >\n      <Heading\n        justifySelf={{ base: \"center\", sm: \"flex-end\" }}\n        as=\"h5\"\n        fontSize=\"md\"\n        fontWeight=\"light\"\n        colorScheme=\"black\"\n      >\n        Facets\n      </Heading>\n      <TagOptions\n        onChange={(it) => dispatch({ facets: it })}\n        colorScheme=\"purple\"\n        availableOptions={availableFacets}\n        selected={filters.facets}\n      />\n    </Grid>\n  );\n}\n","import { Divider, Flex, Heading, Icon, Tag, VStack } from \"@chakra-ui/react\";\nimport React, { useContext } from \"react\";\nimport { BiGlassesAlt, IoMdBriefcase, VscBook } from \"react-icons/all\";\nimport { from } from \"rxjs\";\nimport { toArray } from \"rxjs/operators\";\nimport ProfileComponent from \"./Profile\";\nimport Section from \"./Section\";\nimport EducationComponent from \"./Education\";\nimport MilestoneComponent from \"./Milestone\";\nimport { EnhancedResume } from \"../service/resume\";\nimport useObservable from \"../hook/useObservable\";\nimport { collectFacets } from \"../service/tags\";\nimport { FilterContext } from \"../hook/useFilters\";\nimport Stats from \"./Stats\";\nimport Filter from \"./Filter\";\n\nexport default function ResumeComponent({\n  resume,\n  toggles,\n}: {\n  toggles: React.ReactElement;\n  resume: EnhancedResume;\n}): JSX.Element {\n  const { facets: selectedFacets } = useContext(FilterContext).filters;\n  const { data: sideProjectTags } = useObservable(\n    () => from(resume.sideProjects).pipe(collectFacets, toArray()),\n    [resume.sideProjects]\n  );\n  return (\n    <VStack\n      p={{ base: 0, md: 4 }}\n      as=\"header\"\n      spacing={6}\n      align={{ base: \"center\", md: \"start\" }}\n    >\n      <ProfileComponent {...resume.me} darkModeToggle={toggles} />\n      <Filter availableFacets={resume.filters.facets} />\n      <Stats tags={resume.filters.tags} {...resume.stats} />\n      <Section\n        title={\n          <>\n            <Icon verticalAlign=\"text-top\" as={IoMdBriefcase} /> Experience\n          </>\n        }\n        experiences={resume.jobs}\n      />\n      <Section\n        title={\n          <>\n            <Icon verticalAlign=\"bottom\" mb=\"2px\" as={VscBook} /> Education\n          </>\n        }\n        experienceComponent={EducationComponent}\n        experiences={resume.education}\n      />\n      {resume.sideProjects.length ? (\n        <VStack p={6} as=\"section\" align=\"flex-start\">\n          <Heading size=\"md\" fontWeight=\"normal\">\n            <Icon verticalAlign=\"bottom\" mb=\"2px\" as={BiGlassesAlt} /> Side\n            Projects\n          </Heading>\n          <Divider />\n          {sideProjectTags?.length ? (\n            <Flex mb={6} wrap=\"wrap\">\n              {sideProjectTags.map((it) => (\n                <Tag\n                  colorScheme={\n                    !selectedFacets.length || selectedFacets.includes(it)\n                      ? \"purple\"\n                      : \"gray\"\n                  }\n                  mt={3}\n                  mr={4}\n                  key={it}\n                >\n                  {it}\n                </Tag>\n              ))}\n            </Flex>\n          ) : undefined}\n          <VStack w=\"100%\" spacing={2} align=\"flex-start\">\n            {resume.sideProjects.map((milestone) => (\n              <React.Fragment key={`${milestone.title}-${milestone.date}`}>\n                <MilestoneComponent {...milestone} />\n              </React.Fragment>\n            ))}\n          </VStack>\n        </VStack>\n      ) : undefined}\n    </VStack>\n  );\n}\n","import {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from \"@chakra-ui/react\";\nimport React, { useContext, useState } from \"react\";\nimport { InputDataModal } from \"../hook/useInputData\";\n\nexport default function InputMissingData(): JSX.Element {\n  const { hide: onClose, data, onChange, showing } = useContext(InputDataModal);\n  const [email, setEmail] = useState(data.email || \"\");\n  const [phone, setPhone] = useState(data.phone || \"\");\n  const initialRef = React.useRef<HTMLInputElement>(null);\n  return (\n    <Modal initialFocusRef={initialRef} isOpen={showing} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onChange({ email, phone });\n            onClose();\n          }}\n        >\n          <ModalHeader>Complete your contact info</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody pb={6}>\n            <FormControl>\n              <FormLabel>Email</FormLabel>\n              <Input\n                name=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                ref={initialRef}\n                placeholder=\"johndoe@gmail.com\"\n              />\n            </FormControl>\n\n            <FormControl mt={4}>\n              <FormLabel>Phone</FormLabel>\n              <Input\n                type=\"phone\"\n                name=\"phone\"\n                value={phone}\n                onChange={(e) => setPhone(e.target.value)}\n                placeholder=\"+99999999\"\n              />\n            </FormControl>\n          </ModalBody>\n\n          <ModalFooter justifyContent=\"center\">\n            <Button type=\"submit\" colorScheme=\"blue\" mr={3}>\n              Complete\n            </Button>\n          </ModalFooter>\n        </form>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import React from \"react\";\nimport { IconButton, useColorMode } from \"@chakra-ui/react\";\nimport { FaPrint, MdBrightnessMedium } from \"react-icons/all\";\nimport useResume from \"./hook/useResume\";\nimport useFilters, { FilterContext } from \"./hook/useFilters\";\nimport {\n  PrintContext,\n  usePrint,\n  usePrintModeReducer,\n} from \"./hook/usePrintMode\";\nimport ResumeComponent from \"./component/Resume\";\nimport useInputData, { InputDataModal } from \"./hook/useInputData\";\nimport InputMissingData from \"./component/InputMissingData\";\n\nfunction App(): JSX.Element | null {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const [printMode, togglePrintMode] = usePrintModeReducer();\n  usePrint(printMode, togglePrintMode);\n  const [filters, dispatch] = useFilters();\n  const modalContext = useInputData();\n  const { resume } = useResume(filters, modalContext.data);\n  if (!resume) {\n    return null;\n  }\n  return (\n    <PrintContext.Provider value={printMode}>\n      <InputDataModal.Provider value={modalContext}>\n        <InputMissingData />\n        <FilterContext.Provider value={{ filters, dispatch }}>\n          <ResumeComponent\n            resume={resume}\n            toggles={\n              <>\n                <IconButton\n                  display={printMode ? \"none\" : \"inline-flex\"}\n                  aria-label=\"Dark mode\"\n                  onClick={toggleColorMode}\n                >\n                  <MdBrightnessMedium />\n                </IconButton>\n                <IconButton\n                  ml={2}\n                  display={{\n                    base: \"none\",\n                    md: colorMode === \"dark\" ? \"none\" : \"inline-flex\",\n                  }}\n                  aria-label=\"Print\"\n                  onClick={togglePrintMode}\n                >\n                  <FaPrint />\n                </IconButton>\n              </>\n            }\n          />\n        </FilterContext.Provider>\n      </InputDataModal.Provider>\n    </PrintContext.Provider>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\nimport { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\nimport { mode } from \"@chakra-ui/theme-tools\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst theme = extendTheme({\n  shadows: {\n    outline: \"none\",\n  },\n  fonts: {\n    heading: \"Raleway, sans-serif\",\n    body:\n      \"-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,Oxygen-Sans,Ubuntu,Cantarell,'Helvetica Neue',sans-serif\",\n  },\n  components: {\n    Text: {\n      variants: {\n        defaultProps: {\n          size: \"lg\",\n        },\n      },\n    },\n  },\n  styles: {\n    global: (props) => ({\n      body: {\n        fontFamily: \"Raleway, sans-serif\",\n        color: mode(\"gray.700\", \"whiteAlpha.900\")(props),\n        bg: mode(\"gray.50\", \"gray.900\")(props),\n        lineHeight: \"base\",\n      },\n      section: {\n        bg: mode(\"white\", \"gray.900\")(props),\n        boxShadow: \"md\",\n        w: \"100%\",\n      },\n      p: {\n        fontFamily: \"'Source Serif Pro', serif\",\n      },\n    }),\n  },\n});\n\nconst ReactApp = (\n  <React.StrictMode>\n    <ChakraProvider theme={theme} resetCSS>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>\n);\n\nconst rootElement = document.getElementById(\"root\");\n\nif (rootElement?.hasChildNodes()) {\n  ReactDOM.hydrate(ReactApp, rootElement);\n} else {\n  ReactDOM.render(ReactApp, rootElement);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// eslint-disable-next-line no-console\nreportWebVitals(console.log);\n"],"sourceRoot":""}